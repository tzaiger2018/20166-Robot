// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team6121.robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController chassisRFMotor;
    public static SpeedController chassisRRMotor;
    public static SpeedController chassisLFMotor;
    public static SpeedController chassisLRMotor;
    public static RobotDrive chassisRobotDrive4X;
    public static SpeedController armMotor;
    public static SpeedController openMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        chassisRFMotor = new Victor(1);
        LiveWindow.addActuator("Chassis", "RF Motor", (Victor) chassisRFMotor);
        
        chassisRRMotor = new Victor(0);
        LiveWindow.addActuator("Chassis", "RR Motor", (Victor) chassisRRMotor);
        
        chassisLFMotor = new Victor(2);
        LiveWindow.addActuator("Chassis", "LF Motor", (Victor) chassisLFMotor);
        
        chassisLRMotor = new Victor(3);
        LiveWindow.addActuator("Chassis", "LR Motor", (Victor) chassisLRMotor);
        
        chassisRobotDrive4X = new RobotDrive(chassisLFMotor, chassisLRMotor,
              chassisRFMotor, chassisRRMotor);
        
        chassisRobotDrive4X.setSafetyEnabled(true);
        chassisRobotDrive4X.setExpiration(0.1);
        chassisRobotDrive4X.setSensitivity(0.5);
        chassisRobotDrive4X.setMaxOutput(1.0);

        armMotor = new Victor(4);
        LiveWindow.addActuator("Arm", "Motor", (Victor) armMotor);
        
        openMotor = new Victor(5);
        LiveWindow.addActuator("Open", "Motor", (Victor) openMotor);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    
    public static double leftCalc(double fwd,double rcw,double a, double b)   {
    	return (fwd+b*rcw*(1-fwd));
    }
    
    public static double rightCalc(double fwd,double rcw,double a, double b)   {
    	return (fwd-b*rcw +fwd*rcw*(b-a-1));
    }
}
